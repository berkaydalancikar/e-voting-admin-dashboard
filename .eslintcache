[{"C:\\Pr\\src\\index.js":"1","C:\\Pr\\src\\App.js":"2","C:\\Pr\\src\\features\\User\\Login.js":"3","C:\\Pr\\src\\features\\User\\UserSlice.js":"4","C:\\Pr\\src\\features\\User\\Dashboard.js":"5","C:\\Pr\\src\\helpers\\PrivateRoute.js":"6","C:\\Pr\\src\\helpers\\NotFound.js":"7","C:\\Pr\\src\\features\\User\\Update.js":"8","C:\\Pr\\src\\serviceWorker.js":"9","C:\\Pr\\src\\features\\User\\Header.js":"10","C:\\Pr\\src\\features\\User\\Notifications.js":"11","C:\\Pr\\src\\features\\User\\NewNotification.js":"12","C:\\Pr\\src\\features\\User\\Candidates.js":"13","C:\\Pr\\src\\features\\User\\NewCandidate.js":"14","C:\\Pr\\src\\features\\User\\LeftMenu.js":"15","C:\\Pr\\src\\features\\User\\Profile.js":"16","C:\\Pr\\src\\features\\User\\Election.js":"17"},{"size":738,"mtime":1621507889661,"results":"18","hashOfConfig":"19"},{"size":1620,"mtime":1622286835988,"results":"20","hashOfConfig":"19"},{"size":4432,"mtime":1622290130453,"results":"21","hashOfConfig":"19"},{"size":15474,"mtime":1622289779339,"results":"22","hashOfConfig":"19"},{"size":6221,"mtime":1622204021949,"results":"23","hashOfConfig":"19"},{"size":402,"mtime":1621585931602,"results":"24","hashOfConfig":"19"},{"size":119,"mtime":1621507889799,"results":"25","hashOfConfig":"19"},{"size":4659,"mtime":1622290925484,"results":"26","hashOfConfig":"19"},{"size":5004,"mtime":1621507889676,"results":"27","hashOfConfig":"19"},{"size":819,"mtime":1621793285956,"results":"28","hashOfConfig":"19"},{"size":10367,"mtime":1622205119331,"results":"29","hashOfConfig":"19"},{"size":5470,"mtime":1622190375010,"results":"30","hashOfConfig":"19"},{"size":6733,"mtime":1622207842120,"results":"31","hashOfConfig":"19"},{"size":9906,"mtime":1622123759338,"results":"32","hashOfConfig":"19"},{"size":2056,"mtime":1622150288196,"results":"33","hashOfConfig":"19"},{"size":5569,"mtime":1622206324041,"results":"34","hashOfConfig":"19"},{"size":4001,"mtime":1622208236838,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"wbm8c",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"39"},"C:\\Pr\\src\\index.js",["81"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport toast, { Toaster } from 'react-hot-toast';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n      <Toaster />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["82","83"],"C:\\Pr\\src\\App.js",[],"C:\\Pr\\src\\features\\User\\Login.js",["84","85","86","87","88"],"C:\\Pr\\src\\features\\User\\UserSlice.js",["89"],"C:\\Pr\\src\\features\\User\\Dashboard.js",["90","91"],"import React, { Fragment, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { userSelector, fetchUserBytoken, clearState } from './UserSlice';\nimport Loader from 'react-loader-spinner';\nimport { useHistory } from 'react-router-dom';\nimport { Table } from 'reactstrap';\nimport toast from 'react-hot-toast';\nimport LeftMenu from './LeftMenu';\n\nconst Dashboard = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const sendbulkmail = () => {\n    fetch('http://localhost:9002/sendbulkmail')\n      .then((result) => {\n        toast.success(\"Bulk Mail has been Send\");\n        return result.json();\n      }).then((jsonResult) => {\n        toast.error(jsonResult.message);\n      })\n  }\n  useEffect(() => { dispatch(fetchUserBytoken({ token: localStorage.getItem('token') })); }, []);\n  const { isFetching, isError, students } = useSelector(userSelector);\n  useEffect(() => {\n    if (isError) {\n      dispatch(clearState());\n      history.push('/login');\n    }\n  }, [isError]);\n  const onLogOut = () => {\n    localStorage.removeItem('token');\n    history.push('/login');\n  };\n  var divStyle = {\n    marginRight: \"10px\",\n    width:\"100%\"\n  };\n  const data = students;\n  return (\n    <div className=\"container-fluid mx-auto vrrfdc h-100\">\n      {isFetching ? (\n        <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\n      ) : (\n        <Fragment>       \n            <div className=\"row vh-100 justify-content-center\">\n            <div className=\"col-xs-12 pt-2\" style={{backgroundColor:\"#3f51b5\",height:\"60px\"}}>\n                <button onClick={onLogOut} className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right\">\n                    Log Out\n                </button>\n                <a href=\"/profile\" className=\"bg-blue-500 mr-2 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right\">\n                    Profile\n                </a>\n            </div>\n              <div className=\"col-xs-12 col-md-2\" style={{height:\"100%\",backgroundColor:\"#2b2b2b\"}}>\n                <LeftMenu />\n              </div>\n              <div className=\"col-xs-12 col-md-10\" style={{height:\"100%\",padding:\"15px\",backgroundColor:\"#eee\"}}>\n              <button className=\"btn btn-primary py-2 px-4 rounded float-right\" style={divStyle} onClick={sendbulkmail}>\n                     Send Activation Link\n                </button>\n                <br/>\n                <h3 style={{marginTop:\"30px\"}}>\n                  Student List\n                </h3>\n\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>StudentId</th>\n                      <th>Name</th>\n                      <th>Surname</th>\n                      <th>Status</th>\n                      <th>#</th>          \n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.map(function (d, idx) {\n                      return (\n                        <Fragment>\n                          <tr>\n                            <td>{d.studentId}</td>\n                            <td>   \n                              {d.name}\n                              <div class=\"modal fade\" id={\"exampleModal-\" + d.id} tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog modal-lg\">\n                                  <div class=\"modal-content\">\n                                    <div class=\"modal-header\">\n                                      <h5 class=\"modal-title\" id=\"exampleModalLabel\">{d.name}</h5>\n                                      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                                    </div>\n                                    <div class=\"modal-body\">\n\n\n                                    <dl class=\"row\">\n                                       <dt class=\"col-sm-3 text-left\">Gpa</dt>\n                                       <dd class=\"col-sm-9 text-left\">: {d.Gpa}</dd>\n\n                                       <dt class=\"col-sm-3 text-left\">Grade</dt>\n                                       <dd class=\"col-sm-9 text-left\">: {d.Grade}</dd>\n                                  \n\n                                      <dt class=\"col-sm-3 text-left\">hasVoted</dt>\n                                      <dd class=\"col-sm-9 text-left\">: {d.hasVoted}</dd>\n\n                                      <dt class=\"col-sm-3 text-left\">isCandidate</dt>\n                                      <dd class=\"col-sm-9 text-left\">: {d.isCandidate}</dd>\n\n                                      <dt class=\"col-sm-3 text-left\">primaryDepartment</dt>\n                                      <dd class=\"col-sm-9 text-left\">: {d.primaryDepartment}</dd>\n\n                                      <dt class=\"col-sm-3 text-left\">secondaryDepartment</dt>\n                                      <dd class=\"col-sm-9 text-left\">: {d.secondaryDepartment}</dd>\n                                    </dl>\n\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                      <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Kapat</button>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </td>\n                            <td>{d.surname}</td>\n                            <td>{d.status}</td>  \n                            <td>\n                               <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target={\"#exampleModal-\" + d.id}>\n                                  Detail\n                               </button>\n                            </td>                     \n                          </tr>\n                        </Fragment>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n                \n                \n              </div>\n            </div>\n        \n        </Fragment>\n      )}\n    </div>\n  );\n};\nexport default Dashboard;","C:\\Pr\\src\\helpers\\PrivateRoute.js",[],["92","93"],"C:\\Pr\\src\\helpers\\NotFound.js",[],"C:\\Pr\\src\\features\\User\\Update.js",["94","95","96","97"],"C:\\Pr\\src\\serviceWorker.js",[],["98","99"],"C:\\Pr\\src\\features\\User\\Header.js",["100","101"],"C:\\Pr\\src\\features\\User\\Notifications.js",["102","103","104"],"import React, { Fragment, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { userSelector, fetchNotifyBytoken, deleteNotifyById, clearState, NewNotify } from './UserSlice';\r\nimport Loader from 'react-loader-spinner';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table } from 'reactstrap';\r\nimport toast from 'react-hot-toast';\r\nimport LeftMenu from './LeftMenu';\r\nconst Dashboard = () => {\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchNotifyBytoken({ token: localStorage.getItem('token'), department: \"admin\" }));\r\n  }, []);\r\n  const { isSuccessOk, isFetching, isError, notifies, errorMessage } = useSelector(userSelector);\r\n\r\n  useEffect(() => {\r\n    if (isSuccessOk) {\r\n      dispatch(fetchNotifyBytoken({ token: localStorage.getItem('token'), department: \"admin\" }));\r\n    }\r\n    if (isError) {\r\n      dispatch(clearState());\r\n      toast.error(errorMessage);\r\n    }\r\n  }, [isSuccessOk, isError]);\r\n  const onSubmit = (data) => {\r\n    dispatch(NewNotify(data));\r\n    dispatch(fetchNotifyBytoken({ token: localStorage.getItem('token'), department: \"admin\" }));   \r\n  };\r\n  const onLogOut = () => {\r\n    localStorage.removeItem('token');\r\n    history.push('/login');\r\n  };\r\n  const onDelete = Id => {\r\n    dispatch(deleteNotifyById({ Id: Id }));\r\n  };\r\n  const data = notifies;\r\n  return (\r\n    <div className=\"container-fluid mx-auto vrrfdc h-100\">\r\n      {isFetching ? (\r\n        <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"row vh-100 justify-content-center\">\r\n            <div className=\"col-xs-12 pt-2\" style={{ backgroundColor: \"#3f51b5\", height: \"60px\" }}>\r\n              <button onClick={onLogOut} className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right\">\r\n                Log Out\r\n              </button>\r\n              <a href=\"/profile\" className=\"bg-blue-500 mr-2 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right\">\r\n                Profile\r\n              </a>\r\n            </div>\r\n            <div className=\"col-xs-12 col-md-2\" style={{ height: \"100%\", backgroundColor: \"#2b2b2b\" }}>\r\n              <LeftMenu />\r\n            </div>\r\n            <div className=\"col-xs-12 col-md-10\" style={{ height: \"100%\", padding: \"15px\",backgroundColor:\"#eee\" }}>\r\n              <div className=\"btn btn-success float-right\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">Create</div>\r\n              <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <h5 class=\"modal-title\" id=\"exampleModalLabel\">New Notifications</h5>\r\n                      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                      <form onSubmit={handleSubmit(onSubmit)} method=\"POST\">\r\n                        <div className=\"form-group\" style={{ textAlign: \"left\" }}>\r\n                          <small style={{ width: \"100%\" }}>Title</small>\r\n                          <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\r\n                            <div className=\"input-group-prepend\">\r\n                              <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-envelope\"></i></span>\r\n                            </div>\r\n                            <input\r\n                              id=\"title\"\r\n                              name=\"title\"\r\n                              type=\"title\"\r\n                              autocomplete=\"title\"\r\n                              required\r\n                              ref={register({ required: true })}\r\n                              className=\"form-control\" />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\" style={{ textAlign: \"left\" }}>\r\n                          <small style={{ width: \"100%\" }}>Content</small>\r\n                          <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\r\n                            <div className=\"input-group-prepend\">\r\n                              <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-envelope\"></i></span>\r\n                            </div>\r\n                            <input\r\n                              id=\"content\"\r\n                              name=\"content\"\r\n                              type=\"content\"\r\n                              ref={register({ required: true })}\r\n                              autoComplete=\"department\"\r\n                              required\r\n                              className=\"form-control\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\" style={{ marginTop: \"15px\" }}>\r\n                          {isFetching ? (\r\n                            <svg\r\n                              class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              fill=\"none\"\r\n                              viewBox=\"0 0 24 24\">\r\n                              <circle\r\n                                class=\"opacity-25\"\r\n                                cx=\"12\"\r\n                                cy=\"12\"\r\n                                r=\"10\"\r\n                                stroke=\"currentColor\"\r\n                                stroke-width=\"4\"\r\n                              ></circle>\r\n                              <path\r\n                                class=\"opacity-75\"\r\n                                fill=\"currentColor\"\r\n                                d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                              ></path>\r\n                            </svg>\r\n                          ) : null}\r\n                            Create\r\n                        </button>\r\n                      </form>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Kapat</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <h3 style={{ marginTop: \"30px\" }}>Notifications</h3>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Id</th>\r\n                    <th>Title</th>\r\n                    <th>#</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data.map(function (d, idx) {\r\n                    return (\r\n                      <Fragment key={idx}>\r\n                        <tr data-bs-toggle=\"modal\" data-bs-target={\"#exampleModal-\" + d.id} style={{cursor:\"pointer\"}}>\r\n                          <td>{d.id}</td>\r\n                          <td>\r\n                            {d.title}\r\n                            <div class=\"modal fade\" id={\"exampleModal-\" + d.id} tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                <div class=\"modal-dialog modal-lg\">\r\n                                  <div class=\"modal-content\">\r\n                                    <div class=\"modal-header\">\r\n                                      <h5 class=\"modal-title\" id=\"exampleModalLabel\">{d.name}</h5>\r\n                                      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                      <table class=\"table table-striped\">\r\n                                        <thead>\r\n                                          <tr>\r\n                                            <th>Gpa</th>\r\n                                            <th>Grade</th>\r\n                                            <th>hasVoted</th>\r\n                                            <th>isCandidate</th>\r\n                                            <th>primaryDepartment</th>\r\n                                            <th>secondaryDepartment</th>\r\n                                          </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                          <tr>\r\n                                            <td>{d.gpa}</td>\r\n                                            <td>{d.grade}</td>\r\n                                            <td>{d.hasVoted ? \"Yes\" : \"No\"}</td>\r\n                                            <td>{d.isCandidate ? \"Yes\" : \"No\"}</td>\r\n                                            <td>{d.primaryDepartment}</td>\r\n                                            <td>{d.secondaryDepartment}</td>\r\n                                          </tr>\r\n                                        </tbody>\r\n                                      </table>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                      <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Kapat</button>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                          </td>\r\n                          <td><div class=\"btn btn-danger\" onClick={() => onDelete(d.id)}>Delete</div></td>\r\n                        </tr>\r\n                      </Fragment>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Dashboard;","C:\\Pr\\src\\features\\User\\NewNotification.js",["105","106","107"],"import React, { Fragment, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NewNotify, userSelector, clearState } from './UserSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst NewNotification = () => {\r\n  const dispatch = useDispatch();\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const history = useHistory();\r\n\r\n  const { isFetching, isSuccess, isError, errorMessage } = useSelector(\r\n    userSelector\r\n  );\r\n  \r\n  const onSubmit = (data) => {\r\n    dispatch(NewNotify(data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(clearState());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      dispatch(clearState());\r\n      history.push('/Notifications');\r\n    }\r\n\r\n    if (isError) {\r\n      toast.error(errorMessage);\r\n      dispatch(clearState());\r\n    }\r\n  }, [isSuccess, isError]);\r\n  const onLogOut = () => {\r\n    localStorage.removeItem('token');\r\n    history.push('/login');\r\n  };\r\n  return (\r\n    <Fragment>\r\n     <div className=\"container\">\r\n      <div className=\"row\">\r\n          <div className=\"col-xs-12\">  \r\n            <button onClick={onLogOut} className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 mt-3 rounded float-right\">\r\n              Log Out\r\n            </button>\r\n          </div>\r\n         <form onSubmit={handleSubmit(onSubmit)} method=\"POST\">       \r\n          <div className=\"col-md-6 offset-md-3 col-xs-12 card\" style={{ marginTop: \"100px\", background: \"white\", padding: \"70px\" }}>\r\n            <div style={{ borderLeft: \"4px solid #70bbfd\", paddingLeft: \"15px\", width: \"100%\",textAlign:\"left\" }}>\r\n              <div style={{ fontSize: \"24px\" }}>Create Notification</div>\r\n            </div>\r\n            <div className=\"form-group\" style={{textAlign:\"left\"}}>\r\n              <small style={{ width: \"100%\" }}>Title</small>\r\n              <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-envelope\"></i></span>\r\n                </div>\r\n                <input\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    type=\"title\"\r\n                    autocomplete=\"title\"\r\n                    required\r\n                    ref={register({ required: true })}\r\n                    className=\"form-control\" />             \r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\" style={{textAlign:\"left\"}}>\r\n              <small style={{ width: \"100%\" }}>Content</small>\r\n              <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-envelope\"></i></span>\r\n                </div>\r\n                <input\r\n                    id=\"content\"\r\n                    name=\"content\"\r\n                    type=\"content\"\r\n                    ref={register({ required: true })}\r\n                    autoComplete=\"department\"\r\n                    required\r\n                    className=\"form-control\"\r\n                  />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\" style={{textAlign:\"left\"}}>\r\n              <small style={{ width: \"100%\" }}>Department</small>\r\n              <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-envelope\"></i></span>\r\n                </div>\r\n                <input\r\n                    id=\"department\"\r\n                    name=\"department\"\r\n                    type=\"department\"\r\n                    ref={register({ required: true })}\r\n                    autoComplete=\"department\"\r\n                    required\r\n                    value=\"admin\"\r\n                    className=\"form-control\"\r\n                  />\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block\"  style={{marginTop:\"15px\"}}>\r\n                  {isFetching ? (\r\n                    <svg\r\n                      class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\">\r\n                      <circle\r\n                        class=\"opacity-25\"\r\n                        cx=\"12\"\r\n                        cy=\"12\"\r\n                        r=\"10\"\r\n                        stroke=\"currentColor\"\r\n                        stroke-width=\"4\"\r\n                      ></circle>\r\n                      <path\r\n                        class=\"opacity-75\"\r\n                        fill=\"currentColor\"\r\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                      ></path>\r\n                    </svg>\r\n                  ) : null}\r\n                  Create\r\n             </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div> \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NewNotification;","C:\\Pr\\src\\features\\User\\Candidates.js",["108","109","110","111","112","113"],"import React, { Fragment, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NewCandidat,userSelector, fetchCandidateBytoken, clearState, deleteCandidateById, ApproveIt } from './UserSlice';\r\nimport Loader from 'react-loader-spinner';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table } from 'reactstrap';\r\nimport LeftMenu from './LeftMenu';\r\n\r\nconst Candidate = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { register, errors, handleSubmit } = useForm();\r\n  useEffect(() => {\r\n    dispatch(fetchCandidateBytoken({ token: localStorage.getItem('token'), department: \"admin\" }));\r\n  }, []);\r\n  const { isFetching, isError, Candidates } = useSelector(userSelector);\r\n  useEffect(() => {\r\n    if (isError) {\r\n      dispatch(clearState());\r\n      history.push('/login');\r\n    }\r\n  }, [isError]);\r\n  const onLogOut = () => {\r\n    localStorage.removeItem('token');\r\n    history.push('/login');\r\n  };\r\n  const onDelete = Id => {\r\n    dispatch(deleteCandidateById({ Id: Id }));\r\n    dispatch(fetchCandidateBytoken({ token: localStorage.getItem('token'), department: \"admin\" }));\r\n  };\r\n  const onApprove = (Id, what) => {\r\n    console.log(\"kk\");\r\n    dispatch(ApproveIt({ token: localStorage.getItem('token'), Id: Id, what: what }));\r\n    dispatch(fetchCandidateBytoken({ token: localStorage.getItem('token'), department: \"admin\" }));\r\n  };\r\n\r\n  const data = Candidates;\r\n  return (\r\n    <div className=\"container-fluid mx-auto vrrfdc h-100\">\r\n      {isFetching ? (\r\n        <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"row vh-100 justify-content-center\">\r\n            <div className=\"col-xs-12 pt-2\" style={{ backgroundColor: \"#3f51b5\", height: \"60px\" }}>\r\n              <button onClick={onLogOut} className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right\">\r\n                Log Out\r\n                </button>\r\n              <a href=\"/profile\" className=\"bg-blue-500 mr-2 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right\">\r\n                Profile\r\n                </a>\r\n            </div>\r\n            <div className=\"col-xs-12 col-md-2\" style={{ height: \"100%\", backgroundColor: \"#2b2b2b\" }}>\r\n              <LeftMenu />\r\n            </div>\r\n            <div className=\"col-xs-12 col-md-10\" style={{ height: \"100%\", padding: \"15px\" }}>\r\n\r\n            <a className=\"btn btn-success float-right\" href=\"/NewCandidate\">New Candidate</a>\r\n\r\n              <br />\r\n              <h3 style={{ marginTop: \"30px\" }}>Candidates</h3>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Id</th>\r\n                    <th>StudentId</th>\r\n                    <th>Name</th>\r\n                    <th>Surname</th>\r\n                    <th>#</th>\r\n                    <th>#</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data.map(function (d, idx) {\r\n                    return (\r\n                      <Fragment key={idx}>\r\n                        <tr style={{ backgroundColor: d.approved ? \"lightgreen\" : \"white\" }}>\r\n                          <td>{d.id}</td>\r\n                          <td>{d.studentId}</td>\r\n                          <td>{d.name}</td>\r\n                          <td>{d.surname}</td>\r\n                          <td>\r\n                            <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target={\"#exampleModal-\" + d.id}>\r\n                              Detail\r\n                            </button>\r\n                            <div class=\"modal fade\" id={\"exampleModal-\" + d.id} tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                              <div class=\"modal-dialog modal-lg\">\r\n                                <div class=\"modal-content\">\r\n                                  <div class=\"modal-header\">\r\n                                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">{d.name}</h5>\r\n                                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                                  </div>\r\n                                  <div class=\"modal-body\">\r\n                                    <table class=\"table table-striped\">\r\n                                      <thead>\r\n                                        <tr>\r\n                                          <th>Department</th>\r\n                                          <th>Votes</th>\r\n                                          <th>Description</th>\r\n                                          <th>StartAt</th>\r\n                                          <th>EndAt</th>\r\n                                          <th>Approved</th>\r\n                                        </tr>\r\n                                      </thead>\r\n                                      <tbody>\r\n                                        <tr>\r\n                                          <td>{d.department}</td>\r\n                                          <td>{d.votes}</td>\r\n                                          <td>{d.description}</td>\r\n                                          <td>{d.startAt}</td>\r\n                                          <td>{d.endAt}</td>\r\n                                          <td>{d.approved ? <div className=\"btn btn-danger\" onClick={() => onApprove(d.id, 0)}>Onaysız Yap</div> : <div class=\"btn btn-success\" onClick={() => onApprove(d.id, 1)}>Onaylı Yap</div>}</td>\r\n                                        </tr>\r\n                                      </tbody>\r\n                                    </table>\r\n                                  </div>\r\n                                  <div class=\"modal-footer\">\r\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Kapat</button>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </td>                     \r\n                          <td>\r\n                            <div class=\"btn btn-danger\" onClick={() => onDelete(d.id)}>\r\n                              Delete\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      </Fragment>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Candidate;","C:\\Pr\\src\\features\\User\\NewCandidate.js",["114","115","116","117"],"import React, { Fragment, useEffect,useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NewCandidat, userSelector, clearState } from './UserSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst NewCandidate = () => {\r\n  const dispatch = useDispatch();\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const history = useHistory();\r\n  const { isFetching, isSuccess, isError, errorMessage } = useSelector(\r\n    userSelector\r\n  );\r\n  const onSubmit = (data) => {\r\n    dispatch(NewCandidat(data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(clearState());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      dispatch(clearState());\r\n      history.push('/Candidates');\r\n    }\r\n    if (isError) {\r\n      toast.error(errorMessage);\r\n      dispatch(clearState());\r\n    }\r\n  }, [isSuccess, isError]);\r\n  const onLogOut = () => {\r\n    localStorage.removeItem('token');\r\n    history.push('/login');\r\n  };\r\n  return (\r\n    <Fragment>\r\n     <div className=\"container\">\r\n      <div className=\"row\">\r\n      <div className=\"col-xs-12\">\r\n        <button onClick={onLogOut} className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 mt-3 rounded float-right\">\r\n           Log Out\r\n        </button>\r\n        <a href=\"/candidates\" className=\"btn btn-success mt-3 mr-2 float-right\">\r\n           Candidates List\r\n        </a>\r\n      </div>\r\n      <form onSubmit={handleSubmit(onSubmit)} method=\"POST\">       \r\n          <div className=\"col-md-6 offset-md-3 col-xs-12 card\" style={{ marginTop: \"100px\", background: \"white\", padding: \"70px\" }}>\r\n            <div style={{ borderLeft: \"4px solid #70bbfd\", paddingLeft: \"15px\", width: \"100%\",textAlign:\"left\" }}>\r\n              <div style={{ fontSize: \"24px\" }}>Create Candidate</div>\r\n            </div>\r\n            <div className=\"form-group\" style={{textAlign:\"left\"}}>\r\n              <small style={{ width: \"100%\" }}>StudentId</small>\r\n              <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-envelope\"></i></span>\r\n                </div>\r\n                <input\r\n                    id=\"studentId\"\r\n                    name=\"studentId\"\r\n                    type=\"number\"\r\n                    autocomplete=\"studentId\"\r\n                    required\r\n                    ref={register({ required: true })}\r\n                    className=\"form-control\" />             \r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\" style={{textAlign:\"left\"}}>\r\n              <small style={{ width: \"100%\" }}>Name</small>\r\n              <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-envelope\"></i></span>\r\n                </div>\r\n                <input\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    autocomplete=\"name\"\r\n                    required\r\n                    ref={register({ required: true })}\r\n                    className=\"form-control\" />             \r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\" style={{textAlign:\"left\"}}>\r\n              <small style={{ width: \"100%\" }}>Surname</small>\r\n              <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-envelope\"></i></span>\r\n                </div>\r\n                <input\r\n                    id=\"surname\"\r\n                    name=\"surname\"\r\n                    type=\"text\"\r\n                    autocomplete=\"Surname\" \r\n                    required\r\n                    ref={register({ required: true })}\r\n                    className=\"form-control\" />              \r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\" style={{textAlign:\"left\"}}>\r\n              <small style={{ width: \"100%\" }}>Department</small>\r\n              <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-envelope\"></i></span>\r\n                </div>\r\n                <input\r\n                    id=\"department\"\r\n                    name=\"department\"\r\n                    type=\"text\"\r\n                    autocomplete=\"department\"\r\n                    required\r\n                    value=\"admin\"\r\n                    ref={register({ required: true })}\r\n                    className=\"form-control\" />             \r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\" style={{textAlign:\"left\"}}>\r\n              <small style={{ width: \"100%\" }}>Votes</small>\r\n              <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-envelope\"></i></span>\r\n                </div>\r\n                <input\r\n                    id=\"votes\"\r\n                    name=\"votes\"\r\n                    type=\"number\"\r\n                    autocomplete=\"votes\"\r\n                    required\r\n                    ref={register({ required: true })}\r\n                    className=\"form-control\" />             \r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\" style={{textAlign:\"left\"}}>\r\n              <small style={{ width: \"100%\" }}>Description</small>\r\n              <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-envelope\"></i></span>\r\n                </div>\r\n                <input\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    type=\"text\"\r\n                    autocomplete=\"description\"\r\n                    required\r\n                    ref={register({ required: true })}\r\n                    className=\"form-control\" />             \r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\" style={{textAlign:\"left\"}}>\r\n              <small style={{ width: \"100%\" }}>Approved</small>\r\n              <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-envelope\"></i></span>\r\n                </div>\r\n         <select className=\"form-control\" name=\"approved\"  ref={register({ required: true })}>\r\n           <option value=\"true\" selected=\"selected\">Yes</option>\r\n            <option value=\"false\">No</option>\r\n        </select>            \r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\" style={{textAlign:\"left\"}}>\r\n              <small style={{ width: \"100%\" }}>Başlama Tarihi</small>\r\n              <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-envelope\"></i></span>\r\n                </div>\r\n                <input type=\"text\" class=\"form-control alldates\" name=\"startAt\" ref={register({ required: true })}/> \r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\" style={{textAlign:\"left\"}}>\r\n              <small style={{ width: \"100%\" }}>Bitiş Tarihi</small>\r\n              <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-envelope\"></i></span>\r\n                </div>\r\n               <input type=\"text\" class=\"form-control alldates\" name=\"endAt\" ref={register({ required: true })}/>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block\"  style={{marginTop:\"15px\"}}>\r\n                  {isFetching ? (\r\n                    <svg\r\n                      class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\">\r\n                      <circle\r\n                        class=\"opacity-25\"\r\n                        cx=\"12\"\r\n                        cy=\"12\"\r\n                        r=\"10\"\r\n                        stroke=\"currentColor\"\r\n                        stroke-width=\"4\"\r\n                      ></circle>\r\n                      <path\r\n                        class=\"opacity-75\"\r\n                        fill=\"currentColor\"\r\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                      ></path>\r\n                    </svg>\r\n                  ) : null}\r\n                  Create\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div> \r\n  </Fragment>\r\n );\r\n};\r\n\r\nexport default NewCandidate;","C:\\Pr\\src\\features\\User\\LeftMenu.js",[],"C:\\Pr\\src\\features\\User\\Profile.js",["118","119","120"],"import React, { Fragment, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { IsOldPassword, updatePassword, userSelector, clearState } from './UserSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport Loader from 'react-loader-spinner';\r\nimport LeftMenu from './LeftMenu';\r\nconst Update = () => {\r\n  const dispatch = useDispatch();\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const history = useHistory();\r\n  const { IsOld, isFetching, isSuccess, isError, errorMessage } = useSelector(\r\n    userSelector\r\n  );\r\n\r\n  const onSubmit = (data) => {  \r\n    dispatch(updatePassword(data));\r\n  };\r\n\r\n  useEffect(() => { \r\n    dispatch(IsOldPassword());\r\n    return () => {\r\n      dispatch(clearState());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n         dispatch(clearState());\r\n         //history.push('/Dashboard');\r\n    }\r\n\r\n    if (isError) {\r\n      toast.error(errorMessage);\r\n     // console.log(errorMessage);\r\n      dispatch(clearState());\r\n    }\r\n   // console.log(IsOld);\r\n    if(IsOld){\r\n     //toast.error(IsOld);\r\n    }\r\n    else{\r\n     // history.push('/');\r\n    }\r\n  }, [IsOld,isSuccess, isError]);\r\n  const onLogOut = () => {\r\n    localStorage.removeItem('token');\r\n    history.push('/login');\r\n  };\r\n  return (\r\n    <div className=\"container-fluid mx-auto vrrfdc h-100\">\r\n      {isFetching ? (\r\n        <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n      ) : (\r\n        <Fragment>       \r\n            <div className=\"row vh-100 justify-content-center\">\r\n            <div className=\"col-xs-12 pt-2\" style={{backgroundColor:\"#3f51b5\",height:\"60px\"}}>\r\n                <button onClick={onLogOut} className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right\">\r\n                    Log Out\r\n                </button>\r\n                <a href=\"/profile\" className=\"bg-blue-500 mr-2 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right\">\r\n                    Profile\r\n                </a>\r\n            </div>\r\n              <div className=\"col-xs-12 col-md-2\" style={{height:\"100%\",backgroundColor:\"#2b2b2b\"}}>\r\n                <LeftMenu />\r\n              </div>\r\n              <div className=\"col-xs-12 col-md-10\" style={{height:\"100%\",padding:\"15px\",backgroundColor:\"#eee\"}}>\r\n              <form onSubmit={handleSubmit(onSubmit)} method=\"POST\">       \r\n          <div className=\"col-md-6 offset-md-3 col-xs-12 card\" style={{ marginTop: \"100px\", background: \"white\", padding: \"70px\" }}>      \r\n            <div className=\"form-group\" style={{ marginTop: \"30px\",textAlign:\"left\" }}>\r\n              <small style={{ width: \"100%\" }}>Old Password</small>\r\n              <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-user\"></i></span>\r\n                </div>\r\n                <input id=\"oldPassword\" name=\"oldPassword\"  ref={register({ required: true })} type=\"text\" autoComplete=\"oldPassword\" required className=\"form-control\" />\r\n              </div>\r\n            </div>           \r\n            <div className=\"form-group\" style={{textAlign:\"left\"}}>\r\n              <small style={{ width: \"100%\" }}>New Password</small>\r\n              <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-key\"></i></span>\r\n                </div>\r\n                <input\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    ref={register({ required: true })}\r\n                    autoComplete=\"current-password\"\r\n                    required\r\n                    className=\"form-control\"\r\n                  />\r\n                <div className=\"input-group-append\">\r\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-user-secret\"></i></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block\"  style={{marginTop:\"15px\"}}>\r\n                  {isFetching ? (\r\n                    <svg\r\n                      class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\">\r\n                      <circle\r\n                        class=\"opacity-25\"\r\n                        cx=\"12\"\r\n                        cy=\"12\"\r\n                        r=\"10\"\r\n                        stroke=\"currentColor\"\r\n                        stroke-width=\"4\"\r\n                      ></circle>\r\n                      <path\r\n                        class=\"opacity-75\"\r\n                        fill=\"currentColor\"\r\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                      ></path>\r\n                    </svg>\r\n                  ) : null}\r\n                     Submit\r\n                </button>\r\n          </div>\r\n        </form>    \r\n              </div>\r\n            </div>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Update;","C:\\Pr\\src\\features\\User\\Election.js",["121","122","123","124","125","126"],"import React, { Fragment, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userSelector, clearState, NewDates } from './UserSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport Loader from 'react-loader-spinner';\r\nimport LeftMenu from './LeftMenu';\r\n\r\nconst Election = () => {\r\n  const dispatch = useDispatch();\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const history = useHistory();\r\n  const { isFetching, isSuccess, isError, errorMessage } = useSelector(\r\n    userSelector\r\n  );\r\n\r\n\r\n  const onLogOut = () => {\r\n    localStorage.removeItem('token');\r\n    history.push('/login');\r\n  };\r\n  const onSubmit = (data) => {\r\n    dispatch(NewDates(data));\r\n    toast.success(\"Saved\");\r\n  };\r\n  return (\r\n    <div className=\"container-fluid mx-auto vrrfdc h-100\">\r\n      {isFetching ? (\r\n        <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n      ) : (\r\n        <Fragment>       \r\n            <div className=\"row vh-100 justify-content-center\">\r\n            <div className=\"col-xs-12 pt-2\" style={{backgroundColor:\"#3f51b5\",height:\"60px\"}}>\r\n                <button onClick={onLogOut} className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right\">\r\n                    Log Out\r\n                </button>\r\n                <a href=\"/profile\" className=\"bg-blue-500 mr-2 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right\">\r\n                    Profile\r\n                </a>\r\n            </div>\r\n              <div className=\"col-xs-12 col-md-2\" style={{height:\"100%\",backgroundColor:\"#2b2b2b\"}}>\r\n                <LeftMenu />\r\n              </div>\r\n              <div className=\"col-xs-12 col-md-10\" style={{height:\"100%\",padding:\"15px\",backgroundColor:\"#eee\"}}>\r\n                               <form onSubmit={handleSubmit(onSubmit)} method=\"POST\">\r\n                                  <div className=\"input-group\" style={{ width: \"250px\", float: \"left\", marginRight: \"20px\" }}>\r\n                                      <span className=\"input-group-text\">Start Date:</span>\r\n                                      <input name=\"CreatedAt\" ref={register({ required: true })} type=\"text\" class=\"alldates form-control\" />\r\n                                  </div>\r\n\r\n                                  <div className=\"input-group\" style={{ width: \"250px\" }}>\r\n                                      <span className=\"input-group-text\">End Date:</span>\r\n                                      <input name=\"EndAt\" ref={register({ required: true })} type=\"text\" class=\"alldates form-control\" />\r\n                                  </div>\r\n                                  <button type=\"submit\" className=\"btn btn-primary btn-block\"  style={{marginTop:\"15px\"}}>\r\n                  {isFetching ? (\r\n                    <svg\r\n                      class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\">\r\n                      <circle\r\n                        class=\"opacity-25\"\r\n                        cx=\"12\"\r\n                        cy=\"12\"\r\n                        r=\"10\"\r\n                        stroke=\"currentColor\"\r\n                        stroke-width=\"4\"\r\n                      ></circle>\r\n                      <path\r\n                        class=\"opacity-75\"\r\n                        fill=\"currentColor\"\r\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                      ></path>\r\n                    </svg>\r\n                  ) : null}\r\n                  Create\r\n            </button>\r\n                               </form>                  \r\n              </div>\r\n            </div>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Election;",{"ruleId":"127","severity":1,"message":"128","line":8,"column":8,"nodeType":"129","messageId":"130","endLine":8,"endColumn":13},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"127","severity":1,"message":"135","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":9,"column":16,"nodeType":"138","messageId":"139","endLine":9,"endColumn":18},{"ruleId":"127","severity":1,"message":"140","line":12,"column":21,"nodeType":"129","messageId":"130","endLine":12,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":25,"column":6,"nodeType":"143","endLine":25,"endColumn":8,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"145","line":46,"column":6,"nodeType":"143","endLine":46,"endColumn":32,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":463,"column":19,"nodeType":"149","messageId":"139","endLine":463,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":22,"column":94,"nodeType":"143","endLine":22,"endColumn":96,"suggestions":"150"},{"ruleId":"141","severity":1,"message":"151","line":29,"column":6,"nodeType":"143","endLine":29,"endColumn":15,"suggestions":"152"},{"ruleId":"131","replacedBy":"153"},{"ruleId":"133","replacedBy":"154"},{"ruleId":"127","severity":1,"message":"155","line":4,"column":10,"nodeType":"129","messageId":"130","endLine":4,"endColumn":23},{"ruleId":"127","severity":1,"message":"140","line":9,"column":21,"nodeType":"129","messageId":"130","endLine":9,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":27,"column":6,"nodeType":"143","endLine":27,"endColumn":8,"suggestions":"156"},{"ruleId":"141","severity":1,"message":"157","line":47,"column":6,"nodeType":"143","endLine":47,"endColumn":32,"suggestions":"158"},{"ruleId":"131","replacedBy":"159"},{"ruleId":"133","replacedBy":"160"},{"ruleId":"127","severity":1,"message":"161","line":2,"column":31,"nodeType":"129","messageId":"130","endLine":2,"endColumn":40},{"ruleId":"127","severity":1,"message":"162","line":2,"column":42,"nodeType":"129","messageId":"130","endLine":2,"endColumn":55},{"ruleId":"127","severity":1,"message":"140","line":11,"column":21,"nodeType":"129","messageId":"130","endLine":11,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":16,"column":6,"nodeType":"143","endLine":16,"endColumn":8,"suggestions":"163"},{"ruleId":"141","severity":1,"message":"157","line":27,"column":6,"nodeType":"143","endLine":27,"endColumn":28,"suggestions":"164"},{"ruleId":"127","severity":1,"message":"140","line":10,"column":21,"nodeType":"129","messageId":"130","endLine":10,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":25,"column":6,"nodeType":"143","endLine":25,"endColumn":8,"suggestions":"165"},{"ruleId":"141","severity":1,"message":"145","line":37,"column":6,"nodeType":"143","endLine":37,"endColumn":26,"suggestions":"166"},{"ruleId":"127","severity":1,"message":"167","line":4,"column":10,"nodeType":"129","messageId":"130","endLine":4,"endColumn":21},{"ruleId":"127","severity":1,"message":"168","line":13,"column":11,"nodeType":"129","messageId":"130","endLine":13,"endColumn":19},{"ruleId":"127","severity":1,"message":"140","line":13,"column":21,"nodeType":"129","messageId":"130","endLine":13,"endColumn":27},{"ruleId":"127","severity":1,"message":"169","line":13,"column":29,"nodeType":"129","messageId":"130","endLine":13,"endColumn":41},{"ruleId":"141","severity":1,"message":"142","line":16,"column":6,"nodeType":"143","endLine":16,"endColumn":8,"suggestions":"170"},{"ruleId":"141","severity":1,"message":"151","line":23,"column":6,"nodeType":"143","endLine":23,"endColumn":15,"suggestions":"171"},{"ruleId":"127","severity":1,"message":"172","line":1,"column":37,"nodeType":"129","messageId":"130","endLine":1,"endColumn":45},{"ruleId":"127","severity":1,"message":"140","line":10,"column":21,"nodeType":"129","messageId":"130","endLine":10,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":23,"column":6,"nodeType":"143","endLine":23,"endColumn":8,"suggestions":"173"},{"ruleId":"141","severity":1,"message":"145","line":34,"column":6,"nodeType":"143","endLine":34,"endColumn":26,"suggestions":"174"},{"ruleId":"127","severity":1,"message":"140","line":11,"column":21,"nodeType":"129","messageId":"130","endLine":11,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":26,"column":6,"nodeType":"143","endLine":26,"endColumn":8,"suggestions":"175"},{"ruleId":"141","severity":1,"message":"157","line":46,"column":6,"nodeType":"143","endLine":46,"endColumn":32,"suggestions":"176"},{"ruleId":"127","severity":1,"message":"177","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"178","line":4,"column":24,"nodeType":"129","messageId":"130","endLine":4,"endColumn":34},{"ruleId":"127","severity":1,"message":"140","line":12,"column":21,"nodeType":"129","messageId":"130","endLine":12,"endColumn":27},{"ruleId":"127","severity":1,"message":"179","line":14,"column":23,"nodeType":"129","messageId":"130","endLine":14,"endColumn":32},{"ruleId":"127","severity":1,"message":"180","line":14,"column":34,"nodeType":"129","messageId":"130","endLine":14,"endColumn":41},{"ruleId":"127","severity":1,"message":"181","line":14,"column":43,"nodeType":"129","messageId":"130","endLine":14,"endColumn":55},"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","no-native-reassign",["182"],"no-negated-in-lhs",["183"],"'Link' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["184"],"React Hook useEffect has missing dependencies: 'dispatch', 'errorMessage', and 'history'. Either include them or remove the dependency array.",["185"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression",["186"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["187"],["182"],["183"],"'IsOldPassword' is defined but never used.",["188"],"React Hook useEffect has missing dependencies: 'dispatch' and 'errorMessage'. Either include them or remove the dependency array.",["189"],["182"],["183"],"'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.",["190"],["191"],["192"],["193"],"'NewCandidat' is defined but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.",["194"],["195"],"'useState' is defined but never used.",["196"],["197"],["198"],["199"],"'useEffect' is defined but never used.","'clearState' is defined but never used.","'isSuccess' is assigned a value but never used.","'isError' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"200","fix":"204"},{"desc":"205","fix":"206"},{"desc":"200","fix":"207"},{"desc":"208","fix":"209"},{"desc":"200","fix":"210"},{"desc":"211","fix":"212"},{"desc":"200","fix":"213"},{"desc":"214","fix":"215"},{"desc":"200","fix":"216"},{"desc":"205","fix":"217"},{"desc":"200","fix":"218"},{"desc":"214","fix":"219"},{"desc":"200","fix":"220"},{"desc":"208","fix":"221"},"Update the dependencies array to be: [dispatch]",{"range":"222","text":"223"},"Update the dependencies array to be: [isOld, isError, isSuccess, errorMessage, dispatch, history]",{"range":"224","text":"225"},{"range":"226","text":"223"},"Update the dependencies array to be: [dispatch, history, isError]",{"range":"227","text":"228"},{"range":"229","text":"223"},"Update the dependencies array to be: [IsOld, isSuccess, isError, dispatch, errorMessage]",{"range":"230","text":"231"},{"range":"232","text":"223"},"Update the dependencies array to be: [isSuccessOk, isError, dispatch, errorMessage]",{"range":"233","text":"234"},{"range":"235","text":"223"},"Update the dependencies array to be: [isSuccess, isError, dispatch, history, errorMessage]",{"range":"236","text":"237"},{"range":"238","text":"223"},{"range":"239","text":"228"},{"range":"240","text":"223"},{"range":"241","text":"237"},{"range":"242","text":"223"},{"range":"243","text":"231"},[746,748],"[dispatch]",[1239,1265],"[isOld, isError, isSuccess, errorMessage, dispatch, history]",[837,839],[1023,1032],"[dispatch, history, isError]",[795,797],[1175,1201],"[IsOld, isSuccess, isError, dispatch, errorMessage]",[739,741],[1095,1117],"[isSuccessOk, isError, dispatch, errorMessage]",[728,730],[955,975],"[isSuccess, isError, dispatch, history, errorMessage]",[724,726],[919,928],[784,786],[1006,1026],[860,862],[1251,1277]]