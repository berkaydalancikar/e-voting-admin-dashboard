[{"C:\\prj\\Pr2\\src\\index.js":"1","C:\\prj\\Pr2\\src\\features\\User\\Update.js":"2","C:\\prj\\Pr2\\src\\features\\User\\Dashboard.js":"3","C:\\prj\\Pr2\\src\\features\\User\\LeftMenu.js":"4","C:\\prj\\Pr2\\src\\features\\User\\UserSlice.js":"5","C:\\prj\\Pr2\\src\\features\\User\\Login.js":"6","C:\\prj\\Pr2\\src\\features\\User\\Profile.js":"7","C:\\prj\\Pr2\\src\\features\\User\\Notifications.js":"8","C:\\prj\\Pr2\\src\\App.js":"9","C:\\prj\\Pr2\\src\\features\\User\\Election.js":"10","C:\\prj\\Pr2\\src\\helpers\\NotFound.js":"11"},{"size":738,"mtime":1622375523000,"results":"12","hashOfConfig":"13"},{"size":4661,"mtime":1622381443295,"results":"14","hashOfConfig":"13"},{"size":4251,"mtime":1622375523000,"results":"15","hashOfConfig":"13"},{"size":1490,"mtime":1622384227629,"results":"16","hashOfConfig":"13"},{"size":16302,"mtime":1622459984827,"results":"17","hashOfConfig":"13"},{"size":4449,"mtime":1622454570684,"results":"18","hashOfConfig":"13"},{"size":5436,"mtime":1622381651330,"results":"19","hashOfConfig":"13"},{"size":11096,"mtime":1622383306292,"results":"20","hashOfConfig":"13"},{"size":1367,"mtime":1622384179325,"results":"21","hashOfConfig":"13"},{"size":6671,"mtime":1622460591950,"results":"22","hashOfConfig":"13"},{"size":119,"mtime":1622375523000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1rk42il",{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\prj\\Pr2\\src\\index.js",["51"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport toast, { Toaster } from 'react-hot-toast';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n      <Toaster />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["52","53"],"C:\\prj\\Pr2\\src\\features\\User\\Update.js",["54","55","56","57"],"import React, { Fragment, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IsOldPassword, updatePassword, userSelector, clearState } from './UserSlice';\nimport { useHistory } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nconst Update = () => {\n  const dispatch = useDispatch();\n  const { register, errors, handleSubmit } = useForm();\n  const history = useHistory();\n\n  const { IsOld, isFetching, isSuccess, isError, errorMessage } = useSelector(\n    userSelector\n  );\n\n  const onSubmit = (data) => {  \n    dispatch(updatePassword(data));  \n    history.push('/Dashboard');\n\n  };\n\n  useEffect(() => { \n    //dispatch(IsOldPassword());\n    return () => {\n      dispatch(clearState());\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isSuccess) {\n        // dispatch(clearState());\n         //history.push('/Dashboard');\n    }\n\n    if (isError) {\n      toast.error(errorMessage);\n     // console.log(errorMessage);\n      dispatch(clearState());\n    }\n   // console.log(IsOld);\n    if(IsOld){\n     //toast.error(IsOld);\n    }\n    else{\n     // history.push('/Dashboard');\n    }\n  }, [IsOld,isSuccess, isError]);\n  const onLogOut = () => {\n    localStorage.removeItem('token');\n    history.push('/login');\n  };\n  return (\n<Fragment>\n<div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-xs-12 mt-3\">\n        <button onClick={onLogOut} className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right\">\n            Log Out\n          </button>\n        </div>\n      <form onSubmit={handleSubmit(onSubmit)} method=\"POST\">       \n          <div className=\"col-md-6 offset-md-3 col-xs-12 card\" style={{ marginTop: \"100px\", background: \"white\", padding: \"70px\" }}>      \n            <div className=\"form-group d-none\" style={{ marginTop: \"30px\",textAlign:\"left\" }}>\n              <small style={{ width: \"100%\" }}>Old Password</small>\n              <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-user\"></i></span>\n                </div>\n                <input id=\"oldPassword\" name=\"oldPassword\" value=\"admin\" ref={register({ required: true })} type=\"text\" autoComplete=\"oldPassword\" required className=\"form-control\" />\n              </div>\n            </div>           \n            <div className=\"form-group\" style={{textAlign:\"left\"}}>\n              <small style={{ width: \"100%\" }}>New Password</small>\n              <div className=\"input-group mb-3 input-group-sm\" style={{ marginTop: \"10px\" }}>\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-key\"></i></span>\n                </div>\n                <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    ref={register({ required: true })}\n                    autoComplete=\"current-password\"\n                    required\n                    className=\"form-control\"\n                  />\n                <div className=\"input-group-append\">\n                  <span className=\"input-group-text\" style={{ borderRadius: \"0\" }}><i className=\"las la-user-secret\"></i></span>\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary btn-block\"  style={{marginTop:\"15px\"}}>\n                  {isFetching ? (\n                    <svg\n                      class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\">\n                      <circle\n                        class=\"opacity-25\"\n                        cx=\"12\"\n                        cy=\"12\"\n                        r=\"10\"\n                        stroke=\"currentColor\"\n                        stroke-width=\"4\"\n                      ></circle>\n                      <path\n                        class=\"opacity-75\"\n                        fill=\"currentColor\"\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                      ></path>\n                    </svg>\n                  ) : null}\n                     Submit\n                </button>\n          </div>\n        </form>\n      </div>\n    </div> \n    </Fragment>\n  );\n};\nexport default Update;","C:\\prj\\Pr2\\src\\features\\User\\Dashboard.js",["58","59"],"import React, { Fragment, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { userSelector, fetchUserBytoken, clearState } from './UserSlice'\nimport Loader from 'react-loader-spinner'\nimport { useHistory } from 'react-router-dom'\nimport { Table } from 'reactstrap'\nimport toast from 'react-hot-toast'\nimport LeftMenu from './LeftMenu'\n\nconst Dashboard = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const sendbulkmail = () => {\n    fetch('http://localhost:9002/sendbulkmail')\n      .then(result => {\n        toast.success('Bulk Mail has been Send')\n        return result.json()\n      })\n      .then(jsonResult => {\n        toast.error(jsonResult.message)\n      })\n  }\n  useEffect(() => {\n    dispatch(fetchUserBytoken({ token: localStorage.getItem('token') }))\n  }, [])\n  const { isFetching, isError, students } = useSelector(userSelector)\n  useEffect(() => {\n    if (isError) {\n      dispatch(clearState())\n      history.push('/login')\n    }\n  }, [isError])\n  const onLogOut = () => {\n    localStorage.removeItem('token')\n    history.push('/login')\n  }\n  var divStyle = {\n    marginRight: '10px',\n    width: '100%'\n  }\n  const data = students\n  return (\n    <div className='container-fluid mx-auto vrrfdc h-100'>\n      {isFetching ? (\n        <Loader type='Puff' color='#00BFFF' height={100} width={100} />\n      ) : (\n        <Fragment>\n          <div className='row vh-100 justify-content-center'>\n            <div\n              className='col-xs-12 pt-2'\n              style={{ backgroundColor: '#3f51b5', height: '60px' }}\n            >\n              <button\n                onClick={onLogOut}\n                className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right'\n              >\n                Log Out\n              </button>\n              <a\n                href='/profile'\n                className='bg-blue-500 mr-2 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right'\n              >\n                Profile\n              </a>\n            </div>\n            <div\n              className='col-xs-12 col-md-2'\n              style={{ height: '100%', backgroundColor: '#2b2b2b' }}\n            >\n              <LeftMenu />\n            </div>\n            <div\n              className='col-xs-12 col-md-10'\n              style={{\n                height: '100%',\n                padding: '15px',\n                backgroundColor: '#eee'\n              }}\n            >\n              <button\n                className='btn btn-primary py-2 px-4 rounded float-right'\n                style={divStyle}\n                onClick={sendbulkmail}\n              >\n                Send Activation Link\n              </button>\n              <br />\n              <h3 style={{ marginTop: '30px' }}>Student List</h3>\n\n              <Table>\n                <thead>\n                  <tr>\n                    <th>Student ID</th>\n                    <th>Name</th>\n                    <th>Surname</th>\n                    <th>Mail</th>\n                    <th>Status</th>\n                    <th>Voted</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.map(function (d, idx) {\n                    return (\n                      <Fragment>\n                        <tr>\n                          <td>{d.studentId}</td>\n                          <td>\n                            {d.name}\n                            <div\n                              class='modal fade'\n                              id={'exampleModal-' + d.id}\n                              tabindex='-1'\n                              aria-labelledby='exampleModalLabel'\n                              aria-hidden='true'\n                            ></div>\n                          </td>\n                          <td>{d.surname}</td>\n                          <td>{d.mail}</td>\n                          <td>{d.status}</td>\n                          <td>{d.hasVoted}</td>\n                        </tr>\n                      </Fragment>\n                    )\n                  })}\n                </tbody>\n              </Table>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </div>\n  )\n}\nexport default Dashboard\n","C:\\prj\\Pr2\\src\\features\\User\\LeftMenu.js",[],"C:\\prj\\Pr2\\src\\features\\User\\UserSlice.js",["60"],"C:\\prj\\Pr2\\src\\features\\User\\Login.js",["61","62","63","64","65"],"C:\\prj\\Pr2\\src\\features\\User\\Profile.js",["66","67","68"],"C:\\prj\\Pr2\\src\\features\\User\\Notifications.js",["69","70","71"],"import React, { Fragment, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useForm } from 'react-hook-form'\nimport {\n  userSelector,\n  fetchNotifyBytoken,\n  deleteNotifyById,\n  clearState,\n  NewNotify\n} from './UserSlice'\nimport Loader from 'react-loader-spinner'\nimport { useHistory } from 'react-router-dom'\nimport { Table } from 'reactstrap'\nimport toast from 'react-hot-toast'\nimport LeftMenu from './LeftMenu'\nconst Dashboard = () => {\n  const { register, errors, handleSubmit } = useForm()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(\n      fetchNotifyBytoken({\n        token: localStorage.getItem('token'),\n        department: 'admin'\n      })\n    )\n  }, [])\n  const {\n    isSuccessOk,\n    isFetching,\n    isError,\n    notifies,\n    errorMessage\n  } = useSelector(userSelector)\n\n  useEffect(() => {\n    if (isSuccessOk) {\n      dispatch(\n        fetchNotifyBytoken({\n          token: localStorage.getItem('token'),\n          department: 'admin'\n        })\n      )\n    }\n    if (isError) {\n      dispatch(clearState())\n      toast.error(errorMessage)\n    }\n  }, [isSuccessOk, isError])\n  const onSubmit = data => {\n    dispatch(NewNotify(data))\n    dispatch(\n      fetchNotifyBytoken({\n        token: localStorage.getItem('token'),\n        department: 'admin'\n      })\n    )\n  }\n  const onLogOut = () => {\n    localStorage.removeItem('token')\n    history.push('/login')\n  }\n  const onDelete = Id => {\n    dispatch(deleteNotifyById({ Id: Id }))\n    dispatch(\n      fetchNotifyBytoken({\n        token: localStorage.getItem('token'),\n        department: 'admin'\n      })\n    )\n  }\n  const data = notifies\n  return (\n    <div className='container-fluid mx-auto vrrfdc h-100'>\n      {isFetching ? (\n        <Loader type='Puff' color='#00BFFF' height={100} width={100} />\n      ) : (\n        <Fragment>\n          <div className='row vh-100 justify-content-center'>\n            <div\n              className='col-xs-12 pt-2'\n              style={{ backgroundColor: '#3f51b5', height: '60px' }}\n            >\n              <button\n                onClick={onLogOut}\n                className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right'\n              >\n                Log Out\n              </button>\n              <a\n                href='/profile'\n                className='bg-blue-500 mr-2 hover:bg-red-700 text-white font-bold py-2 px-4 rounded float-right'\n              >\n                Profile\n              </a>\n            </div>\n            <div\n              className='col-xs-12 col-md-2'\n              style={{ height: '100%', backgroundColor: '#2b2b2b' }}\n            >\n              <LeftMenu />\n            </div>\n            <div\n              className='col-xs-12 col-md-10'\n              style={{\n                height: '100%',\n                padding: '15px',\n                backgroundColor: '#eee'\n              }}\n            >\n              <div\n                className='btn btn-success float-right'\n                data-bs-toggle='modal'\n                data-bs-target='#exampleModal'\n              >\n                Create\n              </div>\n              <div\n                class='modal fade'\n                id='exampleModal'\n                tabindex='-1'\n                aria-labelledby='exampleModalLabel'\n                aria-hidden='true'\n              >\n                <div class='modal-dialog'>\n                  <div class='modal-content'>\n                    <div class='modal-header'>\n                      <h5 class='modal-title' id='exampleModalLabel'>\n                        New Notifications\n                      </h5>\n                      <button\n                        type='button'\n                        class='btn-close'\n                        data-bs-dismiss='modal'\n                        aria-label='Close'\n                      ></button>\n                    </div>\n                    <div class='modal-body'>\n                      <form onSubmit={handleSubmit(onSubmit)} method='POST'>\n                        <div\n                          className='form-group'\n                          style={{ textAlign: 'left' }}\n                        >\n                          <small style={{ width: '100%' }}>Title</small>\n                          <div\n                            className='input-group mb-3 input-group-sm'\n                            style={{ marginTop: '10px' }}\n                          >\n                            <div className='input-group-prepend'>\n                              <span\n                                className='input-group-text'\n                                style={{ borderRadius: '0' }}\n                              >\n                                <i className='las la-envelope'></i>\n                              </span>\n                            </div>\n                            <input\n                              id='title'\n                              name='title'\n                              type='title'\n                              autocomplete='title'\n                              required\n                              ref={register({ required: true })}\n                              className='form-control'\n                            />\n                          </div>\n                        </div>\n                        <div\n                          className='form-group'\n                          style={{ textAlign: 'left' }}\n                        >\n                          <small style={{ width: '100%' }}>Content</small>\n                          <div\n                            className='input-group mb-3 input-group-sm'\n                            style={{ marginTop: '10px' }}\n                          >\n                            <div className='input-group-prepend'>\n                              <span\n                                className='input-group-text'\n                                style={{ borderRadius: '0' }}\n                              >\n                                <i className='las la-envelope'></i>\n                              </span>\n                            </div>\n                            <input\n                              id='content'\n                              name='content'\n                              type='content'\n                              ref={register({ required: true })}\n                              autoComplete='department'\n                              required\n                              className='form-control'\n                            />\n                          </div>\n                        </div>\n                        <button\n                          type='submit'\n                          className='btn btn-primary btn-block'\n                          style={{ marginTop: '15px' }}\n                        >\n                          {isFetching ? (\n                            <svg\n                              class='animate-spin -ml-1 mr-3 h-5 w-5 text-white'\n                              xmlns='http://www.w3.org/2000/svg'\n                              fill='none'\n                              viewBox='0 0 24 24'\n                            >\n                              <circle\n                                class='opacity-25'\n                                cx='12'\n                                cy='12'\n                                r='10'\n                                stroke='currentColor'\n                                stroke-width='4'\n                              ></circle>\n                              <path\n                                class='opacity-75'\n                                fill='currentColor'\n                                d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                              ></path>\n                            </svg>\n                          ) : null}\n                          Create\n                        </button>\n                      </form>\n                    </div>\n                    <div class='modal-footer'></div>\n                  </div>\n                </div>\n              </div>\n              <br />\n              <h3 style={{ marginTop: '30px' }}>Notifications</h3>\n              <Table>\n                <thead>\n                  <tr>\n                    <th>Title</th>\n                    <th>#</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.map(function (d, idx) {\n                    return (\n                      <Fragment key={idx}>\n                        <tr\n                          data-bs-toggle='modal'\n                          data-bs-target={'#exampleModal-' + d.id}\n                          style={{ cursor: 'pointer' }}\n                        >\n                          <td>{d.title}</td>\n\n                          <td>\n                            <div\n                              class='btn btn-danger'\n                              onClick={() => onDelete(d.id)}\n                            >\n                              Delete\n                            </div>\n                          </td>\n                        </tr>\n                        <div\n                          class='modal fade'\n                          id={'exampleModal-' + d.id}\n                          tabindex='-1'\n                          aria-labelledby='exampleModalLabel'\n                          aria-hidden='true'\n                        >\n                          <div class='modal-dialog modal-lg'>\n                            <div class='modal-content'>\n                              <div class='modal-header'>\n                                <h5 class='modal-title' id='exampleModalLabel'>\n                                  {d.title}\n                                </h5>\n                                <button\n                                  type='button'\n                                  class='btn-close'\n                                  data-bs-dismiss='modal'\n                                  aria-label='Close'\n                                ></button>\n                              </div>\n                              <div class='modal-body'>\n                                <table class='table table-striped'>\n                                  <thead></thead>\n                                  <tbody>\n                                    <tr>\n                                      <td>{d.content}</td>\n                                    </tr>\n                                  </tbody>\n                                </table>\n                              </div>\n                              <div class='modal-footer'></div>\n                            </div>\n                          </div>\n                        </div>\n                      </Fragment>\n                    )\n                  })}\n                </tbody>\n              </Table>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </div>\n  )\n}\nexport default Dashboard\n","C:\\prj\\Pr2\\src\\App.js",[],"C:\\prj\\Pr2\\src\\features\\User\\Election.js",["72","73","74","75","76","77","78"],"C:\\prj\\Pr2\\src\\helpers\\NotFound.js",[],{"ruleId":"79","severity":1,"message":"80","line":8,"column":8,"nodeType":"81","messageId":"82","endLine":8,"endColumn":13},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"79","severity":1,"message":"87","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":23},{"ruleId":"79","severity":1,"message":"88","line":9,"column":21,"nodeType":"81","messageId":"82","endLine":9,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":27,"column":6,"nodeType":"91","endLine":27,"endColumn":8,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":47,"column":6,"nodeType":"91","endLine":47,"endColumn":32,"suggestions":"94"},{"ruleId":"89","severity":1,"message":"90","line":25,"column":6,"nodeType":"91","endLine":25,"endColumn":8,"suggestions":"95"},{"ruleId":"89","severity":1,"message":"96","line":32,"column":6,"nodeType":"91","endLine":32,"endColumn":15,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":483,"column":19,"nodeType":"100","messageId":"101","endLine":483,"endColumn":21},{"ruleId":"79","severity":1,"message":"102","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"104","line":9,"column":16,"nodeType":"105","messageId":"101","endLine":9,"endColumn":18},{"ruleId":"79","severity":1,"message":"88","line":12,"column":21,"nodeType":"81","messageId":"82","endLine":12,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":25,"column":6,"nodeType":"91","endLine":25,"endColumn":8,"suggestions":"106"},{"ruleId":"89","severity":1,"message":"107","line":46,"column":6,"nodeType":"91","endLine":46,"endColumn":32,"suggestions":"108"},{"ruleId":"79","severity":1,"message":"88","line":11,"column":21,"nodeType":"81","messageId":"82","endLine":11,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":26,"column":6,"nodeType":"91","endLine":26,"endColumn":8,"suggestions":"109"},{"ruleId":"89","severity":1,"message":"93","line":46,"column":6,"nodeType":"91","endLine":46,"endColumn":32,"suggestions":"110"},{"ruleId":"79","severity":1,"message":"88","line":17,"column":21,"nodeType":"81","messageId":"82","endLine":17,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":27,"column":6,"nodeType":"91","endLine":27,"endColumn":8,"suggestions":"111"},{"ruleId":"89","severity":1,"message":"93","line":49,"column":6,"nodeType":"91","endLine":49,"endColumn":28,"suggestions":"112"},{"ruleId":"79","severity":1,"message":"113","line":20,"column":11,"nodeType":"81","messageId":"82","endLine":20,"endColumn":19},{"ruleId":"79","severity":1,"message":"88","line":20,"column":21,"nodeType":"81","messageId":"82","endLine":20,"endColumn":27},{"ruleId":"79","severity":1,"message":"114","line":20,"column":29,"nodeType":"81","messageId":"82","endLine":20,"endColumn":41},{"ruleId":"89","severity":1,"message":"90","line":28,"column":6,"nodeType":"91","endLine":28,"endColumn":8,"suggestions":"115"},{"ruleId":"89","severity":1,"message":"90","line":36,"column":6,"nodeType":"91","endLine":36,"endColumn":15,"suggestions":"116"},{"ruleId":"79","severity":1,"message":"117","line":62,"column":9,"nodeType":"81","messageId":"82","endLine":62,"endColumn":18},{"ruleId":"98","severity":1,"message":"118","line":111,"column":30,"nodeType":"100","messageId":"101","endLine":111,"endColumn":32},"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","no-native-reassign",["119"],"no-negated-in-lhs",["120"],"'IsOldPassword' is defined but never used.","'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["121"],"React Hook useEffect has missing dependencies: 'dispatch' and 'errorMessage'. Either include them or remove the dependency array.",["122"],["123"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["124"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Link' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern",["125"],"React Hook useEffect has missing dependencies: 'dispatch', 'errorMessage', and 'history'. Either include them or remove the dependency array.",["126"],["127"],["128"],["129"],["130"],"'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.",["131"],["132"],"'onApprove' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"133","fix":"137"},{"desc":"138","fix":"139"},{"desc":"133","fix":"140"},{"desc":"141","fix":"142"},{"desc":"133","fix":"143"},{"desc":"144","fix":"145"},{"desc":"133","fix":"146"},{"desc":"147","fix":"148"},{"desc":"133","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [dispatch]",{"range":"152","text":"153"},"Update the dependencies array to be: [IsOld, isSuccess, isError, errorMessage, dispatch]",{"range":"154","text":"155"},{"range":"156","text":"153"},"Update the dependencies array to be: [dispatch, history, isError]",{"range":"157","text":"158"},{"range":"159","text":"153"},"Update the dependencies array to be: [isOld, isError, isSuccess, errorMessage, dispatch, history]",{"range":"160","text":"161"},{"range":"162","text":"153"},"Update the dependencies array to be: [IsOld, isSuccess, isError, dispatch, errorMessage]",{"range":"163","text":"164"},{"range":"165","text":"153"},"Update the dependencies array to be: [isSuccessOk, isError, dispatch, errorMessage]",{"range":"166","text":"167"},{"range":"168","text":"153"},"Update the dependencies array to be: [dispatch, isError]",{"range":"169","text":"170"},[795,797],"[dispatch]",[1177,1203],"[IsOld, isSuccess, isError, errorMessage, dispatch]",[832,834],[1014,1023],"[dispatch, history, isError]",[746,748],[1256,1282],"[isOld, isError, isSuccess, errorMessage, dispatch, history]",[835,837],[1206,1232],"[IsOld, isSuccess, isError, dispatch, errorMessage]",[755,757],[1161,1183],"[isSuccessOk, isError, dispatch, errorMessage]",[741,743],[941,950],"[dispatch, isError]"]